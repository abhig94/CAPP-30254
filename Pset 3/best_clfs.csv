,classifier,best metric,AUC,Accuracy,Precision at .05,Precision at .10,Precision at .2,Precision at .25,Precision at .5,Precision at .75,Precision at .85,Recall at .05,Recall at .10,Recall at .20,Recall at .25,Recall at .5,Recall at .75,Recall at .85,f1 at 0.05,f1 at 0.1,f1 at 0.2,f1 at 0.25,f1 at 0.5,f1 at 0.75,f1 at 0.85,test_time (sec),train_time (sec)
6,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=10, max_features='sqrt', max_leaf_nodes=None,
            min_samples_leaf=1, min_samples_split=20,
            min_weight_fraction_leaf=0.0, n_estimators=50, n_jobs=7,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)",AUC,0.861854268315,0.936413333333,0.175169927601,0.269002962517,0.399582751155,0.442925422082,0.638449896637,0.764021164021,0.0,0.834724503263,0.675276723598,0.487902018206,0.42089031176,0.112906457877,0.0015978067664,0.0,0.289530257689,0.384699906388,0.439270309821,0.431603530956,0.191802503216,0.00318855331344,0.0,0.112353722254,1.22383157412
10,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=50, max_features='sqrt', max_leaf_nodes=None,
            min_samples_leaf=1, min_samples_split=20,
            min_weight_fraction_leaf=0.0, n_estimators=50, n_jobs=7,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)",Accuracy,0.852633681618,0.936406666667,0.169943614515,0.247124143059,0.361406114415,0.406060840193,0.593765165698,0.737305479399,0.916666666667,0.825961945366,0.702952242157,0.532274948318,0.457291825795,0.154689668371,0.00837700254242,0.00140145975862,0.281881922963,0.365686579421,0.430504404611,0.430149367044,0.245290209777,0.0165583294457,0.00279539690073,0.111184835434,1.76643323898
1,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=7,
          penalty='l1', random_state=None, solver='liblinear', tol=1e-05,
          verbose=0, warm_start=False)",Precision at .05,0.804032635462,0.9339,0.146392591328,0.199419436479,0.295248823575,0.384124694627,0.586379189939,0.554865424431,0.5,0.798417281973,0.627271662123,0.342994135207,0.226509034777,0.0375959506675,0.00339234586552,0.00049764257874,0.247414882299,0.302603103818,0.317273493936,0.284944808732,0.0706580118941,0.00674004064437,0.000993984210266,0.0040328502655,2.00269365311
12,"LogisticRegression(C=0.1, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=7, penalty='l1', random_state=None,
          solver='liblinear', tol=1e-05, verbose=0, warm_start=False)",Precision at .10,0.828542832921,0.7606,0.0668408960358,0.0683016581353,0.0912022118198,0.107641510209,0.182578814802,0.31694635405,0.499980432141,1.0,0.997805799164,0.95870508288,0.927399194431,0.742470434957,0.436630959076,0.204724046014,0.12530601863,0.127851421576,0.166558467283,0.192891522918,0.293085033901,0.367191520148,0.290312520166,0.00389234224955,5.31967433294
1,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=7,
          penalty='l1', random_state=None, solver='liblinear', tol=1e-05,
          verbose=0, warm_start=False)",Precision at .2,0.804032635462,0.9339,0.146392591328,0.199419436479,0.295248823575,0.384124694627,0.586379189939,0.554865424431,0.5,0.798417281973,0.627271662123,0.342994135207,0.226509034777,0.0375959506675,0.00339234586552,0.00049764257874,0.247414882299,0.302603103818,0.317273493936,0.284944808732,0.0706580118941,0.00674004064437,0.000993984210266,0.0040328502655,2.00269365311
11,"KNeighborsClassifier(algorithm='auto', leaf_size=120, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=1000, p=2,
           weights='distance')",Precision at .25,0.646483854853,0.933013333333,0.0835829340624,0.132593799383,0.32835056276,0.355983772819,0.227564102564,0.28817016317,0.291666666667,0.818066140984,0.216139459975,0.00628344216195,0.00598421228162,0.00189167975769,0.00119446850575,0.00109403664877,0.151665571356,0.164175284078,0.0123305243434,0.0117695861155,0.00375177598689,0.00237888531727,0.00217922244592,26.1570961475,0.982466141383
39,"LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=7,
          penalty='l2', random_state=None, solver='liblinear', tol=1e-05,
          verbose=0, warm_start=False)",Precision at .5,0.80400713785,0.934166666667,0.151688876741,0.198742671539,0.297090389739,0.389206886504,0.587449363273,0.565842759391,0.616666666667,0.783275688342,0.62308198894,0.364221074093,0.245351237567,0.0506578874886,0.00458772408711,0.00149292773622,0.254145569475,0.301329211834,0.327150793,0.30085102222,0.0932572511466,0.00910030456058,0.00297752491131,0.00413084030151,1.17378338178
7,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=7,
          penalty='l2', random_state=None, solver='liblinear', tol=0.001,
          verbose=0, warm_start=False)",Precision at .75,0.657123502071,0.93312,0.0929558089259,0.114097544868,0.144117893326,0.213684441268,0.487834578276,0.149425287356,0.1,0.767997433585,0.365745908478,0.0560811758927,0.0166598021727,0.00948602341649,0.00261122828161,0.000903886712865,0.165833239362,0.173914754979,0.080689012745,0.0308589702809,0.0185898219514,0.0,0.0,0.00430631637573,0.360774278641
5,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=7,
          penalty='l1', random_state=None, solver='liblinear', tol=0.001,
          verbose=0, warm_start=False)",Precision at .85,0.803827168279,0.933486666667,0.144923909345,0.198937094848,0.281432820732,0.356400259836,0.557873980183,0.363445378151,0.0833333333333,0.803600212282,0.642809455354,0.343100732262,0.20451715038,0.0233506067836,0.00259487948255,9.9591674136e-05,0.245557961318,0.303803262629,0.309057004491,0.259877671066,0.0447653797126,0.00513792518151,0.0,0.004092613856,0.674418846766
0,"LogisticRegression(C=0.01, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=7, penalty='l1', random_state=None,
          solver='liblinear', tol=1e-05, verbose=0, warm_start=False)",Recall at .05,0.828856180695,0.761306666667,0.0668404462756,0.0682059622619,0.0894705809554,0.105617127977,0.183208189342,0.320555670146,0.505797292226,1.0,0.99800543737,0.960795105803,0.931982401812,0.743462744708,0.43034615234,0.197629271558,0.125305229211,0.12768551485,0.163696430903,0.189730467195,0.293973166314,0.367315955343,0.283990349207,0.0127603212992,1.56523489952
46,"LogisticRegression(C=1, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=7, penalty='l2', random_state=None,
          solver='liblinear', tol=1, verbose=0, warm_start=False)",Recall at .10,0.572502522048,0.93314,0.06684,0.06684,0.06684,0.06684,0.166666666667,0.0,0.0,1.0,1.0,1.0,1.0,0.000199183348272,0.0,0.0,0.125304445145,0.125304445145,0.125304445145,0.125304445145,0.0,0.0,0.0,0.00414141019185,0.0606444676717
6,"LogisticRegression(C=0.01, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=7, penalty='l2', random_state=None,
          solver='liblinear', tol=0.001, verbose=0, warm_start=False)",Recall at .20,0.829092814317,0.761606666667,0.06684,0.0681400220778,0.0890431502576,0.10457818621,0.183395308702,0.325956281814,0.509489416968,1.0,0.99810670941,0.9624962503,0.932870217858,0.743370960938,0.425464555262,0.196239472954,0.125304445145,0.127570654828,0.163005111846,0.188069289139,0.294207191573,0.369041719415,0.283080572475,0.00425251324972,0.678048292796
4,"LogisticRegression(C=0.01, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=7, penalty='l1', random_state=None,
          solver='liblinear', tol=0.001, verbose=0, warm_start=False)",Recall at .25,0.828837022509,0.76122,0.0668404462756,0.0682273281483,0.0894416080319,0.105451090492,0.183134286707,0.320566644911,0.505360760461,1.0,0.99800543737,0.961095175866,0.931781538098,0.743365989374,0.430649898927,0.19743085886,0.125305229211,0.127722960906,0.163652187341,0.189458027682,0.293870420667,0.367433724823,0.283720782935,0.00403038660685,0.730719327927
2,"LogisticRegression(C=0.01, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=7, penalty='l2', random_state=None,
          solver='liblinear', tol=1e-05, verbose=0, warm_start=False)",Recall at .5,0.829503014652,0.76198,0.06684,0.0678458934342,0.0892396506213,0.105063746543,0.183680764207,0.328720481037,0.510639323358,1.0,0.998602671623,0.962591780126,0.932874349239,0.743567693271,0.422070282772,0.196534710519,0.125304445145,0.127059136959,0.163335907113,0.188855430734,0.294589684485,0.369527207442,0.283608243552,0.00420959790548,1.01992416382
42,"LogisticRegression(C=1, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=7, penalty='l2', random_state=None,
          solver='liblinear', tol=0.001, verbose=0, warm_start=False)",Recall at .75,0.828444654542,0.76014,0.0668404462756,0.0685988118252,0.0910867610094,0.107200430492,0.182438685904,0.315237595947,0.501467031111,1.0,0.997605390308,0.959703204378,0.927089636098,0.743564086281,0.439112905365,0.207601768918,0.125305229211,0.128370226267,0.166380916382,0.192175363884,0.292989713632,0.366924080105,0.293493692562,0.00418496131897,0.728399038315
42,"LogisticRegression(C=1, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=7, penalty='l2', random_state=None,
          solver='liblinear', tol=0.001, verbose=0, warm_start=False)",Recall at .85,0.828444654542,0.76014,0.0668404462756,0.0685988118252,0.0910867610094,0.107200430492,0.182438685904,0.315237595947,0.501467031111,1.0,0.997605390308,0.959703204378,0.927089636098,0.743564086281,0.439112905365,0.207601768918,0.125305229211,0.128370226267,0.166380916382,0.192175363884,0.292989713632,0.366924080105,0.293493692562,0.00418496131897,0.728399038315
14,"LogisticRegression(C=0.1, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=7, penalty='l2', random_state=None,
          solver='liblinear', tol=1e-05, verbose=0, warm_start=False)",f1 at 0.05,0.828573677033,0.760613333333,0.06684,0.0683383415577,0.0911369927049,0.107565809455,0.182540783412,0.317390979931,0.499040071679,1.0,0.99800543737,0.959103904435,0.927299602757,0.742169069853,0.436229686506,0.204724046014,0.125304445145,0.12791729407,0.166455778116,0.19276763377,0.293012406584,0.367368237316,0.2901505025,0.00419155756632,1.25197720528
0,"KNeighborsClassifier(algorithm='auto', leaf_size=60, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=100, p=2,
           weights='uniform')",f1 at 0.1,0.648505836402,0.933173333333,0.0861991533806,0.121507001571,0.328545359219,0.544932909605,0.525540222507,0.0,0.0,0.786571916244,0.34602463335,0.0188396822408,0.0103710726548,0.00489332776528,0.0,0.0,0.15536979879,0.179818515927,0.0355954629935,0.0203534362682,0.00968445148494,0.0,0.0,5.42817052205,1.00307043393
24,"LogisticRegression(C=0.5, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=7, penalty='l1', random_state=None,
          solver='liblinear', tol=1e-05, verbose=0, warm_start=False)",f1 at 0.2,0.82839472575,0.760606666667,0.0668413978366,0.0684561720342,0.0913661211427,0.107817054403,0.182504862161,0.315924156846,0.498635800665,0.999900793651,0.99800543737,0.958605036348,0.926600256282,0.741969886505,0.438126337828,0.206019786559,0.12530611279,0.128123703015,0.166830253031,0.19315605788,0.292950705942,0.367039389399,0.291397072611,0.00394781430562,12.4595563412
4,"KNeighborsClassifier(algorithm='auto', leaf_size=60, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=500, p=2,
           weights='distance')",f1 at 0.25,0.653690120525,0.933046666667,0.0860409325078,0.132173469464,0.337604574817,0.357542819499,0.296996996997,0.269444444444,0.291666666667,0.804799695799,0.259116368326,0.00727865778644,0.00678108474069,0.00288857574788,0.00119446850575,0.00109403664877,0.155457807119,0.174964936033,0.0142496285384,0.0133077810537,0.00572095817868,0.00237829298285,0.00217922244592,15.0147867997,1.00359392166
3,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=7,
          penalty='l2', random_state=None, solver='liblinear', tol=1e-05,
          verbose=0, warm_start=False)",f1 at 0.5,0.801094998652,0.933993333333,0.142802481933,0.202415856509,0.310347296368,0.395304178407,0.583649909991,0.515473032714,0.537662337662,0.80591214115,0.615798744915,0.327945304594,0.219827472178,0.0434772105435,0.00428971971456,0.00129412971288,0.242608347185,0.30465092631,0.318849448037,0.282490649691,0.0809163730158,0.0085084039957,0.00258134201963,0.00425489743551,1.22518491745
2,"LogisticRegression(C=0.01, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=7, penalty='l2', random_state=None,
          solver='liblinear', tol=1e-05, verbose=0, warm_start=False)",f1 at 0.75,0.829503014652,0.76198,0.06684,0.0678458934342,0.0892396506213,0.105063746543,0.183680764207,0.328720481037,0.510639323358,1.0,0.998602671623,0.962591780126,0.932874349239,0.743567693271,0.422070282772,0.196534710519,0.125304445145,0.127059136959,0.163335907113,0.188855430734,0.294589684485,0.369527207442,0.283608243552,0.00420959790548,1.01992416382
42,"LogisticRegression(C=1, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=7, penalty='l2', random_state=None,
          solver='liblinear', tol=0.001, verbose=0, warm_start=False)",f1 at 0.85,0.828444654542,0.76014,0.0668404462756,0.0685988118252,0.0910867610094,0.107200430492,0.182438685904,0.315237595947,0.501467031111,1.0,0.997605390308,0.959703204378,0.927089636098,0.743564086281,0.439112905365,0.207601768918,0.125305229211,0.128370226267,0.166380916382,0.192175363884,0.292989713632,0.366924080105,0.293493692562,0.00418496131897,0.728399038315
2,"LogisticRegression(C=0.01, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=7, penalty='l2', random_state=None,
          solver='liblinear', tol=1e-05, verbose=0, warm_start=False)",test_time (sec),0.829503014652,0.76198,0.06684,0.0678458934342,0.0892396506213,0.105063746543,0.183680764207,0.328720481037,0.510639323358,1.0,0.998602671623,0.962591780126,0.932874349239,0.743567693271,0.422070282772,0.196534710519,0.125304445145,0.127059136959,0.163335907113,0.188855430734,0.294589684485,0.369527207442,0.283608243552,0.00420959790548,1.01992416382
10,"LogisticRegression(C=0.01, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=7, penalty='l2', random_state=None,
          solver='liblinear', tol=1, verbose=0, warm_start=False)",train_time (sec),0.572502522048,0.93314,0.06684,0.06684,0.06684,0.06684,0.166666666667,0.0,0.0,1.0,1.0,1.0,1.0,0.000199183348272,0.0,0.0,0.125304445145,0.125304445145,0.125304445145,0.125304445145,0.0,0.0,0.0,0.00413219134013,0.0605161984762
